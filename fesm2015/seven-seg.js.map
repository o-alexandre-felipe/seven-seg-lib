{"version":3,"file":"seven-seg.js.map","sources":["ng://seven-seg/lib/seven-seg.component.ts","ng://seven-seg/lib/seg-mapping.ts","ng://seven-seg/lib/seven-seg-digit.component.ts","ng://seven-seg/lib/cell/seven-seg-cell.component.ts","ng://seven-seg/lib/hexagon/hexagon.component.ts","ng://seven-seg/lib/seg-settings/seg-settings.component.ts","ng://seven-seg/lib/seven-seg.module.ts"],"sourcesContent":["import {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n  selector: 'lib-seven-seg',\n  template: `\n    <span *ngFor=\"let d of digitState\">\n      <lib-seven-seg-cell [digit]=\"d\" [color]=\"color\"\n        [width]=\"width\" [height]=\"height\"\n        [spacing]=\"spacing\" [thickness]=\"thickness\"></lib-seven-seg-cell>\n    </span>\n  `,\n  styles: []\n})\n\nexport class SevenSegComponent implements OnInit {\n  @Input('count') nDigs = 8;\n  @Input('chars') value = '';\n  @Input('thickness') thickness = 3;\n  @Input('char-width') width = 18;\n  @Input('char-height') height = 42;\n  @Input('color') color = 'black';\n  @Input('spacing') spacing = 1;\n  get digitState(): string[] {\n    const m = this.value.match(/(&[^;]*;?|.)([.,:;]?)/g);\n    const result = [];\n    for ( let i = 0; i < this.nDigs; ++i ) {\n      if (i + m.length < this.nDigs) {\n        result.push('');\n      } else {\n        result.push(m[i + m.length - this.nDigs]);\n      }\n    }\n    return result;\n  }\n  indices: number [];\n  constructor() {\n  }\n\n  ngOnInit() { }\n\n}\n","export const STANDARD_SEG_MAPPING: {[key: string]: string} = {\n  0: 'ABCDEF',\n  1: 'BC',\n  2: 'ABGED',\n  3: 'ABGCD',\n  4: 'BCFG',\n  5: 'AFGCD',\n  6: 'ACDEFG',\n  7: 'ABCF',\n  8: 'ABCDEFG',\n  9: 'ABCDFG',\n  '-': 'G',\n  A: 'ABCEFG',\n  a: 'ABCDEG',\n  B: 'CDEFG',\n  C: 'DEFA',\n  c: 'DEG',\n  D: 'BCDEG',\n  E: 'ADEFG',\n  e: 'ABDEFG',\n  F: 'AEFG',\n  G: 'ACDEF',\n  H: 'BCEFG',\n  h: 'CEFG',\n  i: 'C',\n  J: 'BCDE',\n  L: 'FED',\n  n: 'CEG',\n  N: 'ABCEF',\n  o: 'CDEG',\n  O: 'ABCDEF',\n  P: 'ABEFG',\n  q: 'ABCFG',\n  r: 'EG',\n  s: 'ACDFG',\n  t: 'DEFG',\n  U: 'BCDEF',\n  u: 'CDE',\n  V: 'BCDEF', // same as U\n  v: 'CDE', // same as u\n  Y: 'BEFG',\n  '&o;': 'ABFG',\n  '\\'': 'F',\n  '\\\"': 'BF',\n  _: 'D',\n  '=': 'DG',\n  '[': 'ADEF',\n  ']': 'ABCD',\n  ';': ':.,',\n  ',': '.,',\n  '.': '.',\n  ':': ':.',\n  ' ': ''\n};\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {STANDARD_SEG_MAPPING} from './seg-mapping';\n\n@Component({\n  selector: 'lib-seven-seg-digit',\n  templateUrl: './seven-seg-digit.component.html',\n  styleUrls: ['./seven-seg-digit.component.css']\n})\nexport class SevenSegDigitComponent implements OnInit, OnChanges {\n  @Input('digit') digit = '';\n  @Input('color') color = 'black';\n  @Input('thickness') thickness = '12px';\n  @Input('width') width = '0px';\n  @Input('height') height = '18px';\n  @ViewChild('box1') box1: ElementRef<HTMLDivElement>;\n  @ViewChild('box2') box2: ElementRef<HTMLDivElement>;\n  box1Style: object;\n  box2Style: object;\n  private segments = STANDARD_SEG_MAPPING;\n\n  recalc(s: object): object {\n    const o = s;\n    for (const k in o) {\n      o[k] = this.sanitizer.bypassSecurityTrustStyle(o[k]);\n    }\n    return o;\n  }\n\n  setStyle(e: HTMLElement, s: object): void {\n    console.log([e, s]);\n    for (const k in s) {\n      e.style[k] = this.sanitizer.bypassSecurityTrustStyle(s[k]);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.setStyle(this.box1.nativeElement, {\n      borderWidth: this.thickness + ' solid  transparent',\n      borderBottomWidth: 'calc(0.5*' + this.thickness + ')',\n      width: 'calc(' + this.width + '-4*' + this.thickness + ')',\n      height: 'calc(0.5*' + this.height + '-1.5*' + this.thickness + ')'\n    });\n    this.setStyle(this.box2.nativeElement, {\n      border: this.thickness + ' solid ' + this.color,\n      borderTopWidth: 'calc(0.5*' + this.thickness + ')',\n      width: 'calc(' + this.width + '-4*' + this.thickness + ')',\n      height: 'calc(0.5*' + this.height + '-1.5*' + this.thickness + ')'\n    });\n  }\n\n\n  get segState(): {[key: string]: boolean} {\n    const s = {};\n    for (const k of 'ABCDEFG.') {\n      s[k] = false;\n    }\n    for (const d of this.digit) {\n      for (const k of this.segments[d]) {\n        s[k] = true;\n      }\n    }\n    return s;\n  }\n\n  constructor(public sanitizer: DomSanitizer) {\n    for (const k in this.segments) {\n      if (!this.segments[k.toLowerCase()]) {\n        this.segments[k.toLowerCase()] = this.segments[k];\n      }\n      if (!this.segments[k.toUpperCase()]) {\n        this.segments[k.toUpperCase()] = this.segments[k];\n      }\n    }\n  }\n\n\n  ngOnInit() {\n    console.log({'init digit': this.digit});\n  }\n\n}\n","import {Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {STANDARD_SEG_MAPPING} from '../seg-mapping';\n\n// import {sanitizeStyle} from '@angular/core/src/sanitization/sanitization';\n\n@Component({\n  selector: 'lib-seven-seg-cell',\n  templateUrl: './seven-seg-cell.component.html',\n  styleUrls: ['./seven-seg-cell.component.css']\n})\nexport class SevenSegCellComponent implements OnInit, OnChanges {\n  /* This property setter intercept changes int digit-state input,\n     and build a dictionary with a logical mask that specify\n     what segments are visible.\n */\n  horizontalH: number;\n  horizontalW: number;\n  verticalW: number;\n  verticalH: number;\n  segState: { [key: string]: boolean; };\n  _digit = '';\n  @Input('digit') set digit(digit: string) {\n    const s = {};\n    this._digit = digit;\n    for (const k of 'ABCDEFG.,:') {\n      s[k] = false;\n    }\n    // the user may specify any custom character using a sintax similar to\n    // entities, &.*; the character will be the combination of all the segments\n    // whose identifier is present in the entity.\n    if (this.digit[0] === '&') {\n      for (const k of this._digit) {\n        if (k !== ';' && k !== '&') {\n          s[k] = true;\n        }\n      }\n    } else {\n      for (const d of this._digit) {\n        for (const k of this.segments[d]) {\n          s[k] = true;\n        }\n      }\n    }\n    this.segState = s;\n  }\n\n  get digit(): string {\n    return this._digit;\n  }\n\n  // Style and dimensions are not supposed to change all the time\n  // and when they change there are a lot of properties of the html\n  // elements that will change, thus instead of writing setters and\n  // getters a global input change callback will be issued.\n  @Input('color') color = 'black';\n  @Input('spacing') spacing = 0;\n  @Input('thickness') thickness = 6;\n  @Input('width') width = 30;\n  @Input('height') height = 34;\n\n  // gather all the\n  @ViewChild('bed') bed: ElementRef<HTMLDivElement>;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.fit();\n  }\n\n  fit(): void {\n    let el: HTMLDivElement;\n    const w = this.width;\n    const t = this.thickness;\n    const h = this.height;\n    const elements = {};\n    const styleMeasure = (d: number): string => d + 'px';\n\n    this.bed.nativeElement.style.width = styleMeasure(w);\n    this.bed.nativeElement.style.height = styleMeasure(h);\n    this.bed.nativeElement.style.top = styleMeasure(0);\n    this.bed.nativeElement.style.left = styleMeasure(0);\n\n    // I did not find a way to iterate over elements, so I am doing using\n    // native DOM method.\n    for (el = this.bed.nativeElement.firstChild as HTMLDivElement;\n         el !== null; el = el.nextSibling as HTMLDivElement) {\n      elements[el.id] = el;\n    }\n\n    ///////////////////////////////////////////////////////////////\n    //  Set color\n    //////////////////////////////////////////////////////////////\n    for (const id of 'ABCDEFG') {\n      elements[id].style.backgroundColor = 'transparent';\n    }\n    for (const id of '.:,') {\n      elements[id].style.backgroundColor = this.color;\n    }\n\n    ///////////////////////////////////////////////////////////////\n    ///  Set size\n    ///////////////////////////////////////////////////////////////\n    this.horizontalW = w - 2 * t;\n    this.horizontalH = t;\n    for (const id of 'ADG') // horizontal elements\n    {\n      el = elements[id];\n      el.style.width = styleMeasure(w - 1.5 * t);\n      el.style.height = styleMeasure(t);\n    }\n    this.verticalW = t;\n    this.verticalH = 0.5 * h;\n    for (const id of 'BCEF') // vertical elements\n    {\n      el = elements[id];\n      el.style.width = styleMeasure(t);\n      el.style.height = styleMeasure(0.5 * h);\n    }\n    elements['.'].style.width = styleMeasure(t);\n    elements['.'].style.height = styleMeasure(t);\n    elements[':'].style.width = styleMeasure(t);\n    elements[':'].style.height = styleMeasure(t);\n    elements[','].style.width = styleMeasure(0.5 * t);\n    elements[','].style.height = styleMeasure(t);\n\n    ///////////////////////////////////////////////////////////\n    /// Set position\n    ///////////////////////////////////////////////////////////\n\n    // ** left\n\n    // ADEFG all have left = 0;\n    for (const id of 'ADEFG') {\n      elements[id].style.left = styleMeasure(0);\n    }\n    // the segments on the right hand side (1)\n    for (const id of 'BC') // vertical elements\n    {\n      elements[id].style.left = styleMeasure(w - 3 * t);\n    }\n    for (const id of '.:') {\n      elements[id].style.left = styleMeasure(w - 1.5 * t);\n    }\n    elements[','].style.left = styleMeasure(w - t);\n\n    // ** top\n    for (const id of 'ABF') {\n      elements[id].style.top = styleMeasure(0);\n    }\n    for (const id of 'CEG:') // segments of n\n    {\n      elements[id].style.top = styleMeasure(0.5 * h - t);\n    }\n    for (const id of 'D.') {\n      elements[id].style.top = styleMeasure(h - 2 * t);\n    }\n    elements[','].style.top = styleMeasure(h - t);\n  }\n\n\n  private segments = STANDARD_SEG_MAPPING;\n\n  recalc(s: object): object {\n    const o = s;\n    for (const k in o) {\n      o[k] = this.sanitizer.bypassSecurityTrustStyle(o[k]);\n    }\n    console.log(o);\n    return o;\n  }\n\n  constructor(private sanitizer: DomSanitizer) {\n    for (const k in this.segments) {\n      if (!this.segments[k.toLowerCase()]) {\n        this.segments[k.toLowerCase()] = this.segments[k];\n      }\n      if (!this.segments[k.toUpperCase()]) {\n        this.segments[k.toUpperCase()] = this.segments[k];\n      }\n    }\n  }\n\n\n  ngOnInit() {\n\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'lib-hexagon',\n  templateUrl: './hexagon.component.html',\n  styleUrls: ['./hexagon.component.css']\n})\nexport class HexagonComponent implements OnInit {\n  @Input('color') color = 'black';\n\n  @Input('spacing') set spacing(value: number) {\n    this.s = value;\n    this.fit();\n  }\n\n  get spacing(): number {\n    return this.s;\n  }\n\n  @Input('width') set width(value: number) {\n    this.w = value;\n    this.fit();\n  }\n\n  get width(): number {\n    return this.w;\n  }\n\n  @Input('height') set height(value: number) {\n    this.h = value;\n    this.fit();\n  }\n\n  get height(): number {\n    return this.h;\n  }\n\n  h: number;\n  w: number;\n  s: number;\n  t: number;\n  sw: number;\n  sh: number;\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n\n  fit(): void {\n    const w = this.width;\n    const h = this.height;\n    const s = this.spacing * Math.sqrt(2);\n    let sw: number;\n    let sh: number;\n    let x0: number;\n    let y0: number;\n    let x1: number;\n    let y1: number;\n    let t: number;\n    if (w < h) { // vertical\n      t = w / 2;\n      x0 = -t;\n      x1 = t;\n      y0 = t + s / 2;\n      y1 = t + s / 2;\n      sw = 0;\n      sh = h - 4 * t - s;\n    } else { // horizontal\n      t = h / 2;\n      x0 = t + s / 2;\n      x1 = t + s / 2;\n      y0 = -t;\n      y1 = t;\n      sw = w - 4 * t - s;\n      sh = 0;\n    }\n    this.t = t;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n    this.sw = sw;\n    this.sh = sh;\n    console.log({w: w, h: h, t: t, s: s});\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.fit();\n  }\n\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'lib-seg-settings',\n  templateUrl: './seg-settings.component.html',\n  styleUrls: ['./seg-settings.component.css']\n})\nexport class SegSettingsComponent implements OnInit {\n  thickness = 6;\n  spacing = 1;\n  count = 20;\n  chars = '7-seg. display';\n  color = '#f00';\n  width = 40;\n  height = 60;\n\n  @ViewChild('box1') b1: ElementRef<HTMLElement>;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {SevenSegComponent} from './seven-seg.component';\nimport {SevenSegDigitComponent} from './seven-seg-digit.component';\nimport {CommonModule} from '@angular/common';\nimport {SevenSegCellComponent} from './cell/seven-seg-cell.component';\nimport {HexagonComponent} from './hexagon/hexagon.component';\nimport {SegSettingsComponent} from './seg-settings/seg-settings.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SevenSegComponent,\n    SevenSegDigitComponent,\n    SevenSegCellComponent,\n    HexagonComponent,\n    SegSettingsComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    SevenSegComponent,\n    SevenSegCellComponent,\n    HexagonComponent,\n    SegSettingsComponent\n  ]\n})\nexport class SevenSegModule {\n}\n\n"],"names":[],"mappings":"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"}
